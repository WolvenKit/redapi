// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Website User Model

model User {
  GlobalId          Int     @id @default(autoincrement())
  Username          String?
  GlobalName        String?
  Avatar            String?
  DiscordiD         String  @unique
  Theme             String? @default("default")
  Style             String? @default("uppercase")
  Description       String?
  GithubUsername    String?
  NexusModsUsername String?
  NexusMods         Json?
  Github            Json?
  Roles             Json?
}

// Custom Commands, called Tags in DB

model Tags {
  GlobalId   Int     @id @default(autoincrement())
  TagName    String  @unique
  TagContent String?
}

// Moderation Panel Info

model Moderation {
  GlobalId     Int       @id @default(autoincrement())
  DiscordId    String    @unique
  JWT          String?   @unique
  Status       String?
  WarningLevel Int?
  WarningCount Int?
  LastWarning  DateTime?
  LastReason   String?
  Resolved     Boolean
  Warnings     Warning[]
}

model Warning {
  GlobalId   Int      @id @default(autoincrement())
  IssuedTime DateTime @default(now())

  Reason             String?
  IssuerName         String
  Moderation         Moderation? @relation(fields: [moderationGlobalId], references: [GlobalId])
  moderationGlobalId Int?
}

model Bans {
  GlobalId    Int     @id @default(autoincrement())
  DiscordId   String
  DiscordName String
  Reason      String?
  Partial     Boolean
  GuildId     String
}

model Kick {
  GlobalId    Int     @id @default(autoincrement())
  DiscordId   String
  DiscordName String
  Reason      String?
  Partial     Boolean
  GuildId     String
}

model Quotes {
  GlobalId  Int    @id @default(autoincrement())
  Quote     String
  Responder String
}

model MessageComparison {
  GlobalId                Int       @id @default(autoincrement())
  LastMessageHash         String?
  CurrentMessageHash      String?
  UserId                  String    @unique
  TimestampLastMessage    DateTime?
  TimestampCurrentMessage DateTime?
}

model Auth {
  GlobalId  Int     @id @default(autoincrement())
  DiscordId String? @unique
  JWT       String? @unique
  Endpoints Json?
  Roles     Json?
}

model Settings {
  Id                       Int     @id @default(autoincrement())
  GuildId                  String? @unique
  RestrictedQuotesChannels Json?
  MarkedMembersChannel     String?
  ModerationCategory       String?
  ModerationLog            String?
  MarkedMembersRole        String?

  InteractionSettings   InteractionSettings? @relation(fields: [interactionSettingsId], references: [Id])
  interactionSettingsId Int?

  EventSettings   EventSettings? @relation(fields: [eventSettingsId], references: [Id])
  eventSettingsId Int?
}

model InteractionSettings {
  Id        Int     @id @default(autoincrement())
  Avatar    Boolean @default(false)
  Clean     Boolean @default(false)
  Clear     Boolean @default(false)
  Core      Boolean @default(false)
  Developer Boolean @default(false)
  Discord   Boolean @default(false)
  Emoji     Boolean @default(false)
  Infos     Boolean @default(false)
  Mute      Boolean @default(false)
  Remind    Boolean @default(false)
  Repeat    Boolean @default(false)
  Sync      Boolean @default(false)
  Teams     Boolean @default(false)
  Who       Boolean @default(false)

  Settings Settings[]
}

model EventSettings {
  Id                     Int     @id @default(autoincrement())
  ban                    Boolean @default(false)
  categoryChannelCreated Boolean @default(false)
  categoryChannelDeleted Boolean @default(false)
  categoryChannelUpdated Boolean @default(false)
  duplicationChecker     Boolean @default(false)
  guildJoin              Boolean @default(false)
  join                   Boolean @default(false)
  kick                   Boolean @default(false)
  mark                   Boolean @default(false)
  messageDelete          Boolean @default(false)
  messageUpdate          Boolean @default(false)
  quickCommands          Boolean @default(false)
  quote                  Boolean @default(false)
  suggenstions_handle    Boolean @default(false)
  textChannelCreate      Boolean @default(false)
  textChannelDelete      Boolean @default(false)
  textChannelUpdate      Boolean @default(false)
  threadCreate           Boolean @default(false)
  threadDelete           Boolean @default(false)
  threadUpdate           Boolean @default(false)
  userBan                Boolean @default(false)
  userCheck              Boolean @default(false)
  userJoined             Boolean @default(false)
  userRemoved            Boolean @default(false)
  userUnban              Boolean @default(false)

  Settings Settings[]
}

model Infotext {
  id   Int   @id @default(autoincrement())
  Json Json?
}

model LLM {
  Id      Int          @id @default(autoincrement())
  UserId  String       @unique
  Message LLMMessage[]
}

model LLMMessage {
  Id        Int      @id @default(autoincrement())
  UserId    String
  Message   String
  Timestamp DateTime @default(now())
  LLM       LLM?     @relation(fields: [llmId], references: [Id])
  llmId     Int?
}
